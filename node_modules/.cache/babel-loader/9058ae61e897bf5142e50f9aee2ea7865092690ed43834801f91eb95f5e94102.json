{"ast":null,"code":"var _jsxFileName = \"/home/thenest/Moringa/Development/Code/code-challenges/Projects/phase-2-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Added filteredProducts state\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(''); // Added searchTerm state\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/products');\n        const data = await response.json();\n        setProducts(data);\n        setFilteredProducts(data); // Initialize filteredProducts with all products\n      } catch (error) {\n        console.error('Error fetching product data:', error);\n        setError('Error fetching product data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Update filteredProducts when searchTerm changes\n  useEffect(() => {\n    const filtered = products.filter(product => product.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredProducts(filtered);\n  }, [searchTerm, products]);\n  const addProduct = async product => {\n    try {\n      const response = await fetch('http://localhost:3001/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(product)\n      });\n      const newProduct = await response.json();\n      setProducts([...products, newProduct]);\n      setFilteredProducts([...filteredProducts, newProduct]); // Update filteredProducts as well\n    } catch (error) {\n      console.error('Error adding product:', error);\n      setError('Error adding product');\n    }\n  };\n  const handleProductClick = productId => {\n    setSelectedProductId(productId);\n  };\n  const handleSearchChange = value => {\n    setSearchTerm(value);\n  };\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    } else if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    } else if (selectedProductId) {\n      const selectedProduct = products.find(product => product.id === selectedProductId);\n      return /*#__PURE__*/_jsxDEV(ProductPage, {\n        product: selectedProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ProductListing, {\n        products: filteredProducts // Render filteredProducts instead of all products\n        ,\n        addProduct: addProduct,\n        onProductClick: handleProductClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CartProvider, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        searchTerm: searchTerm,\n        onSearchChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), renderContent(), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), selectedProductId && /*#__PURE__*/_jsxDEV(ProductModal, {\n        product: products.find(product => product.id === selectedProductId),\n        onClose: () => setSelectedProductId(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7VNh016UiiKBXkaoeRs93pEDo8o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","products","setProducts","useState","filteredProducts","setFilteredProducts","selectedProductId","setSelectedProductId","loading","setLoading","error","setError","searchTerm","setSearchTerm","useEffect","fetchProducts","response","fetch","data","json","console","filtered","filter","product","title","toLowerCase","includes","addProduct","method","headers","body","JSON","stringify","newProduct","handleProductClick","productId","handleSearchChange","value","renderContent","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedProduct","find","id","ProductPage","ProductListing","onProductClick","className","CartProvider","NavBar","onSearchChange","Footer","ProductModal","onClose","_c","$RefreshReg$"],"sources":["/home/thenest/Moringa/Development/Code/code-challenges/Projects/phase-2-project/src/App.js"],"sourcesContent":["\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]); // Added filteredProducts state\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(''); // Added searchTerm state\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/products');\n        const data = await response.json();\n        setProducts(data);\n        setFilteredProducts(data); // Initialize filteredProducts with all products\n      } catch (error) {\n        console.error('Error fetching product data:', error);\n        setError('Error fetching product data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  // Update filteredProducts when searchTerm changes\n  useEffect(() => {\n    const filtered = products.filter((product) =>\n      product.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredProducts(filtered);\n  }, [searchTerm, products]);\n\n  const addProduct = async (product) => {\n    try {\n      const response = await fetch('http://localhost:3001/products', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(product),\n      });\n      const newProduct = await response.json();\n      setProducts([...products, newProduct]);\n      setFilteredProducts([...filteredProducts, newProduct]); // Update filteredProducts as well\n    } catch (error) {\n      console.error('Error adding product:', error);\n      setError('Error adding product');\n    }\n  };\n\n  const handleProductClick = (productId) => {\n    setSelectedProductId(productId);\n  };\n\n  const handleSearchChange = (value) => {\n    setSearchTerm(value);\n  };\n\n  const renderContent = () => {\n    if (loading) {\n      return <p>Loading...</p>;\n    } else if (error) {\n      return <p>{error}</p>;\n    } else if (selectedProductId) {\n      const selectedProduct = products.find((product) => product.id === selectedProductId);\n      return <ProductPage product={selectedProduct} />;\n    } else {\n      return (\n        <ProductListing\n          products={filteredProducts} // Render filteredProducts instead of all products\n          addProduct={addProduct}\n          onProductClick={handleProductClick}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <CartProvider>\n        <NavBar searchTerm={searchTerm} onSearchChange={handleSearchChange} />\n        {renderContent()}\n        <Footer />\n        {selectedProductId && (\n          <ProductModal\n            product={products.find((product) => product.id === selectedProductId)}\n            onClose={() => setSelectedProductId(null)}\n          />\n        )}\n      </CartProvider>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}